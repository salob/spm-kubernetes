{"version":3,"sources":["webpack:///./src/pages/build-images/base_images.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,IAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,2IACA,4DACA,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAd,2DACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,0FAMvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gBACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,wEAKvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mEACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,uMAOzB,oEACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mCACA,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,kBAAsC,0BAAYA,WAAW,KAAvB,yCAExC,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gBAAoC,0BAAYA,WAAW,KAAvB,qCAEtC,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,UAA8B,0BAAYA,WAAW,KAAvB,0CAC9B,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,wDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,cAAkC,0BAAYA,WAAW,KAAvB,QAAlC,0EACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,uEAS/B,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,2DACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,qGAMvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gBACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,8CAMzB,4CACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,2DACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,+FAMvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gBACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,0CAKvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mEACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,2JAW7BJ,EAAWK,gBAAiB","file":"component---src-pages-build-images-base-images-mdx-342e38002169d730774c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`In some circumstances you may need to build your own base images, which can be accomplished using the steps below.`}</p>\n    <h2>{`IBM® SDK, Java™ Technology Edition`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Clone repository and change into the working directory:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`git clone https://github.com/ibmruntimes/ci.docker.git\ncd ci.docker/ibmjava/tests\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Build image:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`./build.sh ibm/ibmjava8-sdk-ubi8-minimal:latest ../8/sdk/ubi-min\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`(optional) Tag and Push the image to a private Docker registry:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`docker tag ibm/ibmjava8-sdk-ubi8-minimal:latest $DOCKER_REGISTRY/my-library/ibm/ibmjava8-sdk-ubi8-minimal:latest\ndocker push $DOCKER_REGISTRY/my-library/ibm/ibmjava8-sdk-ubi8-minimal:latest\n`}</code></pre>\n      </li>\n    </ul>\n    <h2>{`S2I Core (required for Apache HTTP Server)`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Install pre-requisite packages:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Ubuntu/Debian: `}<inlineCode parentName=\"p\">{`sudo apt-get install go-md2man make`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`CentOS/RHEL: `}<inlineCode parentName=\"p\">{`sudo yum install go-md2man make`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`MacOS: `}<inlineCode parentName=\"p\">{`brew install bash coreutils go-md2man`}</inlineCode></p>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">\n                <p parentName=\"li\">{`Reopen the terminal after installing these packages`}</p>\n              </li>\n              <li parentName=\"ul\">\n                <p parentName=\"li\">{`Update the `}<inlineCode parentName=\"p\">{`PATH`}</inlineCode>{` variable to use the GNU version of commands that also exist on MacOS:`}</p>\n                <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-shell\"\n                  }}>{`export PATH=\"/usr/local/opt/coreutils/libexec/gnubin:$PATH\"\n`}</code></pre>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Clone repository and change into the working directory:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`git clone --recursive https://github.com/sclorg/s2i-base-container.git\ncd s2i-base-container\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Build image:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`make build TARGET=rhel8 VERSIONS=core\n`}</code></pre>\n      </li>\n    </ul>\n    <h2>{`Apache HTTP Server`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Clone repository and change into the working directory:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`git clone --recursive https://github.com/sclorg/httpd-container.git\ncd httpd-container\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Build image:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`make tag TARGET=rhel8 VERSIONS=2.4\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`(optional) Tag and Push the image to a private Docker registry:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`docker tag rhel8/httpd-24:latest $DOCKER_REGISTRY/my-library/rhel8/httpd-24:latest\ndocker push $DOCKER_REGISTRY/my-library/rhel8/httpd-24:latest\n`}</code></pre>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}