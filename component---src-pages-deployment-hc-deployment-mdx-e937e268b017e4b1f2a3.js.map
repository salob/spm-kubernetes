{"version":3,"sources":["webpack:///./src/pages/deployment/hc_deployment.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","InlineNotification","Tabs","Tab","Row","Column","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","label","isMDXComponent"],"mappings":"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","file":"component---src-pages-deployment-hc-deployment-mdx-e937e268b017e4b1f2a3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` As of Release 20.7.0, the Helm version used to verify this runbook is 3.2. All the Helm commands that are used in this runbook are based on Helm v3.`}</p>\n    </InlineNotification>\n    <p>{`When the Helm charts are uploaded to the repository, you can deploy the application by using one of the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Helm v3 ('releasename' is mandatory for Helm v3)\nhelm install releasename local-development/spm\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note`}</strong>{`: releasename should contain no capital letters.`}</p>\n    </InlineNotification>\n    <p>{`Where `}<inlineCode parentName=\"p\">{`releasename`}</inlineCode>{` is the name of this Helm release. For example, MyRelease-1.0.\nIf you do not specify a name, Helm auto generates one. All the names of the Kubernetes objects are created with `}<inlineCode parentName=\"p\">{`releasename-`}</inlineCode>{` as prefix.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`helm install`}</inlineCode>{` command installs the Helm charts in the order in which they were loaded in the repository, with all the values defined in the files.\nHowever, as described in `}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/build-images/setup_docker_context\"\n      }}>{`Setting up the Docker® context`}</a>{`, you can override the configuration value by running the following shell script:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Helm v3\nhelm install releasename local-development/spm -f override-values.yaml\n`}</code></pre>\n    <h3>{`Sample `}<inlineCode parentName=\"h3\">{`override-values.yaml`}</inlineCode>{` files`}</h3>\n    <p>{`Here are three sample override files for deploying.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/spm-kubernetes/resources/minikube-values.yaml\"\n        }}>{`Minikube`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/spm-kubernetes/resources/crc-values.yaml\"\n        }}>{`CodeReady Containers`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/spm-kubernetes/resources/iks-values.yaml\"\n        }}>{`IBM Cloud Kubernetes Service`}</a></li>\n    </ul>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note on IKS overrides:`}</strong></p>\n      <ul>\n        <li parentName=\"ul\">{`The full image name is based on the `}<inlineCode parentName=\"li\">{`registry`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`imageLibrary`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`imagePrefix`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`imageTag`}</inlineCode>{` keys nested under `}<inlineCode parentName=\"li\">{`global.images`}</inlineCode>{` as follows:`}<ul parentName=\"li\">\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`{registry}/{imageLibrary}/{imagePrefix}curam:{imageTag}`}</inlineCode></li>\n            <li parentName=\"ul\">{`With the given values, the resulting image name will look like this: `}<inlineCode parentName=\"li\">{`us.icr.io/foo-library/test_curam:latest`}</inlineCode></li>\n          </ul></li>\n        <li parentName=\"ul\">{`IAM credentials for the `}<a parentName=\"li\" {...{\n            \"href\": \"https://cloud.ibm.com/docs/containers?topic=containers-registry\"\n          }}>{`IBM Container Registry`}</a>{` (`}<inlineCode parentName=\"li\">{`global.imagePullSecret`}</inlineCode>{`) must be provided.`}</li>\n        <li parentName=\"ul\">{`The `}<a parentName=\"li\" {...{\n            \"href\": \"https://cloud.ibm.com/docs/containers?topic=containers-ingress_annotation#alb-id\"\n          }}>{`Application Load Balancer IDs`}</a>{` (`}<inlineCode parentName=\"li\">{`ingress.annotations.\"ingress.bluemix.net/ALB-ID\"`}</inlineCode>{`) must be provided for the Ingress resource to be created correctly.`}</li>\n      </ul>\n    </InlineNotification>\n    <p>{`The license agreements for the IBM® WebSphere® Liberty and IBM WebSphere MQ images must be accepted in order to proceed with the deployment of these elements. This can be done by setting the `}<inlineCode parentName=\"p\">{`global.license`}</inlineCode>{` property to `}<inlineCode parentName=\"p\">{`accept`}</inlineCode>{`.`}</p>\n    <p>{`The respective license agreements can be reviewed by running the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# IBM WebSphere Liberty\ndocker run --rm -e LICENSE=view websphere-liberty:20.0.0.9-full-java8-ibmjava\n\n# IBM WebSphere MQ\ndocker run --rm -e LICENSE=view ibmcom/mq:9.1.3.0\n`}</code></pre>\n    <h2>{`Status of the system`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`helm install`}</inlineCode>{` command shows all the Kubernetes objects and also runs the SPM containers. You can track the status of the SPM containers on real time by running the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl get pods -w\n\nNAME                                              READY  STATUS    RESTARTS  AGE\nreleasename-apps-curam-consumer-595c8bf95f-zn2l5  0/1    Init 3/4  0         5m\nreleasename-apps-curam-producer-6b5569c4ff-nvxtd  1/1    Running   0         5m\nreleasename-apps-rest-consumer-85b4865b9d-wr6hj   0/1    Init 3/4  0         5m\nreleasename-apps-rest-producer-cd8fdbbbf-j2mjj    0/1    Init 3/4  0         5m\nreleasename-uawebapp-7cdd64987-qx8l8                1/1    Running   0         5m\nreleasename-web-67697ffb8b-fdsk2                  1/1    Running   0         5m\nreleasename-mqserver-curam-7f45bcd64d-rlqns       1/1    Running   0         5m\nreleasename-mqserver-rest-544c5b4758-pnbpz        1/1    Running   0         5m\nreleasename-xmlserver-77d6d9b75d-4xr8k            1/1    Running   0         5m\n\n`}</code></pre>\n    <p>{`The command lists the pods and their status, where each status change is on a new line.`}</p>\n    <p>{`Some of the pods have initialization steps, so they are not shown until the steps are completed.`}</p>\n    <p>{`The output of the `}<inlineCode parentName=\"p\">{`kubectl get pods`}</inlineCode>{` command provides the names of the pods that you can use to substitute for `}<inlineCode parentName=\"p\">{`podname`}</inlineCode>{` in the following example commands.\nFor example, the Liberty pod that contains SPM code is a name that uses a pattern of: `}<inlineCode parentName=\"p\">{`releasename-apps-curam-`}</inlineCode>{`.`}</p>\n    <p>{`You can also describe a pod by running the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl describe pod/pod name\n`}</code></pre>\n    <p>{`You can also read the log when the status is `}<inlineCode parentName=\"p\">{`running`}</inlineCode>{`, by running the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl logs -f pod/podname\n`}</code></pre>\n    <h2>{`Accessing the application`}</h2>\n    <p>{`To access the application, a URL is provided to access the pod within the cluster. This access is provided using Ingress resources on Kubernetes, and Routes resources on OpenShift.`}</p>\n    <p>{`Example URLs:`}</p>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Minikube\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`https://minikube.local/Curam\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"CRC\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`https://spm-ocp.apps-crc.testing/Curam\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"IKS\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`https://spm.<cluster_name>-<hash>-0000.<region>.containers.appdomain.cloud/Curam\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}