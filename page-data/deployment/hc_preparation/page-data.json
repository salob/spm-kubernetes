{"componentChunkName":"component---src-pages-deployment-hc-preparation-mdx","path":"/deployment/hc_preparation/","result":{"pageContext":{"frontmatter":{"title":"Preparing Helm charts","description":"Preparing Helm charts"},"relativePagePath":"/deployment/hc_preparation.mdx","titleType":"page","MdxNode":{"id":"818b5247-9f8d-5993-83e7-8bb0b44ee856","children":[],"parent":"4ca0adc1-e9de-5e40-bf31-4e3a5fa5fdff","internal":{"content":"---\ntitle: Preparing Helm charts\ndescription: Preparing Helm charts\n---\n\n<InlineNotification>\n\n**Note:** As of Release 20.7.0, the Helm version used to verify this runbook is 3.2. All the Helm commands that are used in this runbook are based on Helm v3.\n\n</InlineNotification>\n\nThe [spm-kubernetes](https://github.com/IBM/spm-kubernetes) repository provides nine Helm charts:\n\n* *apps:* defines how to deploy the IBM速 WebSphere速 Liberty images with the SPM application.\n* *batch:* defines the batch image configuration.\n* *uawebapp:* defines how to deploy the Universal Access (React) application.\n* *web:* defines how to deploy the static content image for SPM (`Curam` image only).\n* *mqserver:* defines the IBM WebSphere MQ image configuration.\n* *openldap:* defines the OpenLDAP image configuration (used for session failover).\n* *xmlserver:* defines the xmlserver container configuration.\n* *spm:* an umbrella chart to contain all the other charts.\n\nThe charts use a templating mechanism to create the YAML file that is used by Kubernetes.\nFor this reason, the main configuration values are stored for each chart in a `values.yaml` file in the main folder of the charts.\nThe values can also be overwritten by the `spm:*` umbrella chart or by a provided override file during deployment as described in [Deploying Helm charts](/deployment/hc_deployment).\n\nYAML is a human-readable structured data format. It provides powerful configuration settings, without having to learn a more complex code type like CSS, JavaScript, or PHP.\n\n## Preparing to run the Helm charts\n\nBefore you run the charts, you must configure the database, configure IBM MQ, and test the charts.\nYou may also optionally integrate your deployment with an ISAM server for SSO enablement,\nto do so please complete the steps on the [Enabling ISAM](/supporting-infrastructure/ISAM) page under Supporting Infrastructure before returning here.\nBefore you run the charts, you must configure the database, configure IBM MQ, and resolve all chart dependencies.\n\nMany of the Helm charts that make up a deployment of SPM depend on the [IBM Shared Configuration Helpers](https://github.com/IBM/charts/tree/master/samples/ibm-sch) chart, so an extra Helm repository must be added using the command below:\n\n```shell\nhelm repo add sch https://raw.githubusercontent.com/IBM/charts/master/repo/samples\nhelm repo update\n```\n\n### Configuring the Helm chart\n\nAn in-depth catalog of available configuration options is available in the [Configuration Reference](../config-reference) topic.\n\nWhile you may change the values in your local copy of `helm-charts/spm/values.yaml`, it is strongly recommended to use a values override file with your custom options.\n\n<InlineNotification>\n\nSample override files for Minikube, IKS, and CRC are also available in the `$SPM_HOME/static/resources` folder.\n\n</InlineNotification>\n\n### Configuring IBM MQ\n\nIBM MQ is already configured to work out of the box with a secure connection with IBM WebSphere Liberty.\nThe commands that create all the objects that are needed on the queue manager are defined in a config map, in the `configmap-mqsc.yaml` file.\n\nThe password for the IBM MQ web console can be retrieved from the created Secret resource using the command below **after** it has been deployed:\n\n```shell\nkubectl get secret <releaseName>-mq-credentials -o go-template='{{.data.adminPasswordKey | base64decode}}{{\"\\n\"}}'\n```\n\n## Packaging the Helm charts\n\nTo use the Helm Charts to install SPM, package the charts and load them into a repository. For more information, see [ChartMuseum](/prereq/chartmuseum).\n\nFor each chart, its dependencies must be resolved before it can be loaded into a Helm repository like Chart museum.\n\n```shell\ncd $SPM_HOME/helm-charts\n\nhelm dependency update apps\nhelm dependency update mqserver\nhelm dependency update xmlserver\nhelm dependency update batch\nhelm dependency update web\nhelm dependency update uawebapp\n```\n\nIf you made any changes to any of the charts, these can now be verified using the `helm lint` and `helm template` commands, for example:\n\n```shell\ncd $SPM_HOME/helm-charts\n\nhelm lint apps\nhelm template apps\n```\n\nTo publish the individual charts to the Chart museum repository, run the following commands from the `helm-charts` folder. The commands also use the `$SPM_HOME` value that is defined in [Install prerequisite software](/prereq/git):\n\n```shell\ncd $SPM_HOME/helm-charts\n\nhelm push apps local-development\nhelm push mqserver local-development\nhelm push xmlserver local-development\nhelm push batch local-development\nhelm push web local-development\nhelm push uawebapp local-development\nhelm push openldap local-development\n\nhelm repo update\n```\n\nTo generate the umbrella chart that is used for the deployment, run the following commands:\n\n```shell\ncd $SPM_HOME/helm-charts\n\nhelm dependency update spm\nhelm push spm local-development\n\nhelm repo update\n```\n","type":"Mdx","contentDigest":"372afd123d795892b2c64d23694d7bb2","counter":146,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Preparing Helm charts","description":"Preparing Helm charts"},"exports":{},"rawBody":"---\ntitle: Preparing Helm charts\ndescription: Preparing Helm charts\n---\n\n<InlineNotification>\n\n**Note:** As of Release 20.7.0, the Helm version used to verify this runbook is 3.2. All the Helm commands that are used in this runbook are based on Helm v3.\n\n</InlineNotification>\n\nThe [spm-kubernetes](https://github.com/IBM/spm-kubernetes) repository provides nine Helm charts:\n\n* *apps:* defines how to deploy the IBM速 WebSphere速 Liberty images with the SPM application.\n* *batch:* defines the batch image configuration.\n* *uawebapp:* defines how to deploy the Universal Access (React) application.\n* *web:* defines how to deploy the static content image for SPM (`Curam` image only).\n* *mqserver:* defines the IBM WebSphere MQ image configuration.\n* *openldap:* defines the OpenLDAP image configuration (used for session failover).\n* *xmlserver:* defines the xmlserver container configuration.\n* *spm:* an umbrella chart to contain all the other charts.\n\nThe charts use a templating mechanism to create the YAML file that is used by Kubernetes.\nFor this reason, the main configuration values are stored for each chart in a `values.yaml` file in the main folder of the charts.\nThe values can also be overwritten by the `spm:*` umbrella chart or by a provided override file during deployment as described in [Deploying Helm charts](/deployment/hc_deployment).\n\nYAML is a human-readable structured data format. It provides powerful configuration settings, without having to learn a more complex code type like CSS, JavaScript, or PHP.\n\n## Preparing to run the Helm charts\n\nBefore you run the charts, you must configure the database, configure IBM MQ, and test the charts.\nYou may also optionally integrate your deployment with an ISAM server for SSO enablement,\nto do so please complete the steps on the [Enabling ISAM](/supporting-infrastructure/ISAM) page under Supporting Infrastructure before returning here.\nBefore you run the charts, you must configure the database, configure IBM MQ, and resolve all chart dependencies.\n\nMany of the Helm charts that make up a deployment of SPM depend on the [IBM Shared Configuration Helpers](https://github.com/IBM/charts/tree/master/samples/ibm-sch) chart, so an extra Helm repository must be added using the command below:\n\n```shell\nhelm repo add sch https://raw.githubusercontent.com/IBM/charts/master/repo/samples\nhelm repo update\n```\n\n### Configuring the Helm chart\n\nAn in-depth catalog of available configuration options is available in the [Configuration Reference](../config-reference) topic.\n\nWhile you may change the values in your local copy of `helm-charts/spm/values.yaml`, it is strongly recommended to use a values override file with your custom options.\n\n<InlineNotification>\n\nSample override files for Minikube, IKS, and CRC are also available in the `$SPM_HOME/static/resources` folder.\n\n</InlineNotification>\n\n### Configuring IBM MQ\n\nIBM MQ is already configured to work out of the box with a secure connection with IBM WebSphere Liberty.\nThe commands that create all the objects that are needed on the queue manager are defined in a config map, in the `configmap-mqsc.yaml` file.\n\nThe password for the IBM MQ web console can be retrieved from the created Secret resource using the command below **after** it has been deployed:\n\n```shell\nkubectl get secret <releaseName>-mq-credentials -o go-template='{{.data.adminPasswordKey | base64decode}}{{\"\\n\"}}'\n```\n\n## Packaging the Helm charts\n\nTo use the Helm Charts to install SPM, package the charts and load them into a repository. For more information, see [ChartMuseum](/prereq/chartmuseum).\n\nFor each chart, its dependencies must be resolved before it can be loaded into a Helm repository like Chart museum.\n\n```shell\ncd $SPM_HOME/helm-charts\n\nhelm dependency update apps\nhelm dependency update mqserver\nhelm dependency update xmlserver\nhelm dependency update batch\nhelm dependency update web\nhelm dependency update uawebapp\n```\n\nIf you made any changes to any of the charts, these can now be verified using the `helm lint` and `helm template` commands, for example:\n\n```shell\ncd $SPM_HOME/helm-charts\n\nhelm lint apps\nhelm template apps\n```\n\nTo publish the individual charts to the Chart museum repository, run the following commands from the `helm-charts` folder. The commands also use the `$SPM_HOME` value that is defined in [Install prerequisite software](/prereq/git):\n\n```shell\ncd $SPM_HOME/helm-charts\n\nhelm push apps local-development\nhelm push mqserver local-development\nhelm push xmlserver local-development\nhelm push batch local-development\nhelm push web local-development\nhelm push uawebapp local-development\nhelm push openldap local-development\n\nhelm repo update\n```\n\nTo generate the umbrella chart that is used for the deployment, run the following commands:\n\n```shell\ncd $SPM_HOME/helm-charts\n\nhelm dependency update spm\nhelm push spm local-development\n\nhelm repo update\n```\n","fileAbsolutePath":"/home/travis/build/IBM/spm-kubernetes/src/pages/deployment/hc_preparation.mdx"}}}}