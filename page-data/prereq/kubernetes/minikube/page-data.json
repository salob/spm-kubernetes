{"componentChunkName":"component---src-pages-prereq-kubernetes-minikube-mdx","path":"/prereq/kubernetes/minikube/","result":{"pageContext":{"frontmatter":{"title":"Minikube","description":"Minikube","tabs":["Kubernetes Overview","Minikube","IBM Cloud Kubernetes Service"]},"relativePagePath":"/prereq/kubernetes/minikube.mdx","titleType":"page","MdxNode":{"id":"1e99296c-28f6-5731-b70f-73b85d05a13c","children":[],"parent":"d3cda597-5ee3-5506-8f42-531a24939773","internal":{"content":"---\ntitle: Minikube\ndescription: Minikube\ntabs: ['Kubernetes Overview','Minikube','IBM Cloud Kubernetes Service']\n---\n\nMinikube runs a single-node Kubernetes cluster inside a virtual machine (VM) on your laptop, for users who want to try out Kubernetes or develop with it.\nMinikube documentation is available at [Installing Kubernetes with Minikube](https://kubernetes.io/docs/setup/minikube/).\nThe following sections are not a substitute for the official documentation but they get you started in a classic configuration.\n\n<InlineNotification>\n\n**Note:** Minikube version used to verify this runbook: 1.12\n\n</InlineNotification>\n\nThe following installation steps are described:\n\n* Installing Minikube\n* Setting up the Docker® registry\n* Configuring the hosts file for Minikube\n* Starting Minikube\n* Enabling Helm for Minikube\n* A summary of some useful Minikube commands\n\n## Minikube installation\n\nMinikube installation steps are described in the official documentation for your preferred Operating System: [Install Minikube](https://kubernetes.io/docs/tasks/tools/install-minikube/).\n\n## Starting Minikube\n\nMinikube can be started with a command as simple as `minikube start` without any additional parameters. However, the resulting VM will be too small to deploy an instance of SPM, so several other parameters are required:\n\n```shell\nminikube start --vm-driver=virtualbox --cpus 4 --memory 8G --insecure-registry \"192.168.0.0/16\" --disk-size='30G' --kubernetes-version v1.18.6\n```\n\nWhere `192.168.0.0/16` is the subnet that contains the IP address that is assigned to the Minikube VM. You can verify the IP address by using the `minikube ip` command.\n\nThe IP address might vary depending on your development environment. Therefore, start a Minikube instance to get the IP address and then delete it\nand restart it with the start command. See the note in [Specifying the insecure registry](#specifying-the-insecure-registry).\n\n### Specifying the resource allocation\n\nYou can add properties to specify the resource allocation. For example:\n\n* `--cpus 4` to use 4 CPUs\n* `--memory 8G` to use 8 GB of RAM\n* `--disk-size=30G` to use 30 GB of disk space\n\n### Specifying the VM driver\n\nAdd the `--vm-driver=` option to the `minikube start` command to specify the underlying virtual machine driver. The following drivers were tested:\n\n* `--vm-driver=virtualbox` - VirtualBox on OSX and Windows\n* `--vm-driver=vmware` - VMware Fusion on OSX\n* `--vm-driver=none` - Minikube running directly on a Linux® node without virtualization (this is not recommended on personal workstations)\n\nThe [Install Minikube](https://kubernetes.io/docs/tasks/tools/install-minikube/) page gives you more information on available VM driver options.\n\n### Specifying the insecure registry\n\nYou must specify the `--insecure-registry` option to reference the Docker registry that is created. The `--insecure-registry` value is the same as specified in the  `daemon.json` file.\n\n<InlineNotification>\n\n**Note:** Because of a limitation in the current version of Minikube, adding the `--insecure-registry` option works on a new Minikube instance only.\nIf you start Minikube, be sure to run `minikube stop` and `minikube delete` before you start it again with the `--insecure-registry` option.\n\n</InlineNotification>\n\n### Specifying the Kubernetes version\n\nYou can override the version of Kubernetes that gets installed inside the Minikube VM by using the `--kubernetes-version` flag. This flag controls the compatibility between the client tools and the Kubernetes specification.\n\nIf you override the Kubernetes version, ensure that you download and install the corresponding version of `kubectl` - this version must be the same version as the Kubernetes cluster.\n\n<InlineNotification>\n\n**Note:** The `kubectl` version running locally and on Minikube should be compatible, so it's possible to use the `--kubernetes-version` flag to keep them consistent.\n\n</InlineNotification>\n\n## Docker registry\n\nYou need a registry to use docker images with Helm in Minikube.\nThere are different types of registries that can be used. However, this page describes a simple registry option that doesn't require extra components.\n\nMinikube provides an add-on to run a registry in a container. For more information, see [How to access the Docker registry within minikube](https://minikube.sigs.k8s.io/docs/tasks/docker_registry/).\n\nYou can use the following command to enable the add-on:\n\n```shell\nminikube addons enable registry\n```\n\nWhen enabled, starting Minikube starts two pods on the `kube-system` namespace, named `registry` and `registry-proxy`. Now the registry is active and can be used. The registry points to the Minikube IP address on port 5000.\n\nThe containers don't mount any volumes, so stopping Minikube deletes the registry content.\n\n## Hostname configuration for Minikube\n\nThis runbook uses a generic hostname of `minikube.local` as an example in commands and the configuration files.\nYou should add the Minikube IP address to the `hosts` file by using the generic hostname, or else modify the usage of `minikube.local` in this runbook to reflect your local hostname.\n\n<Tabs>\n\n<Tab label=\"Mac/Linux\">\n<Row>\n<Column>\n\n```shell\necho -e \"$(minikube ip)\\tminikube.local\" | sudo tee -a /etc/hosts\n```\n\n</Column>\n</Row>\n</Tab>\n\n<Tab label=\"Windows\">\n<Row>\n<Column>\n\n```powershell\nAdd-Content -Path C:\\Windows\\System32\\drivers\\etc\\hosts -Value \"$(minikube ip)`tminikube.local\" -Force\n```\n\n</Column>\n</Row>\n</Tab>\n\n</Tabs>\n\nWhere `minikube ip` is the command that returns the Minikube VM's IP address that is accessible from your workstation.\n\nThe local Docker client configuration must be also be updated with the corresponding IP address.\n\n* Update the `daemon.json` docker configuration file with the Minikube IP address. This file is usually located in:\n  * `~/.docker/daemon.json` on OSX\n  * `/etc/docker/daemon.json` on Linux\n  * `C:\\ProgramData\\Docker\\config\\daemon.json` on Windows\n\nExample of `daemon.json`:\n\n```json\n{\n  \"insecure-registries\": [\n    \"192.168.0.0/16\"\n  ]\n}\n```\n\n<InlineNotification>\n\n**Note:** You can provide a specific IP address, or specify a subnet to future-proof the Docker client configuration.\n\n</InlineNotification>\n\nThe Minikube IP address might change when you run `minikube delete`. If it changes, you must repeat these steps.\n\nTherefore, reconfirm the Minikube IP and its setting in the `hosts` file every time you start Minikube, or after you run `minikube delete`.\n\n## Minikube Ingress\n\nIngress is a reverse proxy, which sits in front of the application that is deployed in Kubernetes. It facilitates use of a custom domain name to access a deployed application, instead of using service ports.\nTo enable Ingress for Minikube, you must enable the `ingress` add-on.\n\n```shell\nminikube addons enable ingress\n```\n\n## Useful Minikube commands\n\nSome useful Minikube commands are as follows:\n\n```shell\n# Sample commands\nminikube status       # See if Minikube is running\nminikube start        # Create and start Minikube\nminikube dashboard    # Access the Kubernetes dashboard running within the Minikube cluster\nminikube ssh          # Login into the Minikube VM\nminikube addons list  # Show the status of the available add-ons\nminikube stop         # Stop Minikube\nminikube delete       # Delete the Minikube VM\nminikube ip           # Show the Minikube IP\n```\n\nFor a full list of commands, see [Installing Kubernetes with Minikube](https://kubernetes.io/docs/setup/minikube/).\n","type":"Mdx","contentDigest":"35615972a32528dfdda037a0c90cd607","counter":176,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Minikube","description":"Minikube","tabs":["Kubernetes Overview","Minikube","IBM Cloud Kubernetes Service"]},"exports":{},"rawBody":"---\ntitle: Minikube\ndescription: Minikube\ntabs: ['Kubernetes Overview','Minikube','IBM Cloud Kubernetes Service']\n---\n\nMinikube runs a single-node Kubernetes cluster inside a virtual machine (VM) on your laptop, for users who want to try out Kubernetes or develop with it.\nMinikube documentation is available at [Installing Kubernetes with Minikube](https://kubernetes.io/docs/setup/minikube/).\nThe following sections are not a substitute for the official documentation but they get you started in a classic configuration.\n\n<InlineNotification>\n\n**Note:** Minikube version used to verify this runbook: 1.12\n\n</InlineNotification>\n\nThe following installation steps are described:\n\n* Installing Minikube\n* Setting up the Docker® registry\n* Configuring the hosts file for Minikube\n* Starting Minikube\n* Enabling Helm for Minikube\n* A summary of some useful Minikube commands\n\n## Minikube installation\n\nMinikube installation steps are described in the official documentation for your preferred Operating System: [Install Minikube](https://kubernetes.io/docs/tasks/tools/install-minikube/).\n\n## Starting Minikube\n\nMinikube can be started with a command as simple as `minikube start` without any additional parameters. However, the resulting VM will be too small to deploy an instance of SPM, so several other parameters are required:\n\n```shell\nminikube start --vm-driver=virtualbox --cpus 4 --memory 8G --insecure-registry \"192.168.0.0/16\" --disk-size='30G' --kubernetes-version v1.18.6\n```\n\nWhere `192.168.0.0/16` is the subnet that contains the IP address that is assigned to the Minikube VM. You can verify the IP address by using the `minikube ip` command.\n\nThe IP address might vary depending on your development environment. Therefore, start a Minikube instance to get the IP address and then delete it\nand restart it with the start command. See the note in [Specifying the insecure registry](#specifying-the-insecure-registry).\n\n### Specifying the resource allocation\n\nYou can add properties to specify the resource allocation. For example:\n\n* `--cpus 4` to use 4 CPUs\n* `--memory 8G` to use 8 GB of RAM\n* `--disk-size=30G` to use 30 GB of disk space\n\n### Specifying the VM driver\n\nAdd the `--vm-driver=` option to the `minikube start` command to specify the underlying virtual machine driver. The following drivers were tested:\n\n* `--vm-driver=virtualbox` - VirtualBox on OSX and Windows\n* `--vm-driver=vmware` - VMware Fusion on OSX\n* `--vm-driver=none` - Minikube running directly on a Linux® node without virtualization (this is not recommended on personal workstations)\n\nThe [Install Minikube](https://kubernetes.io/docs/tasks/tools/install-minikube/) page gives you more information on available VM driver options.\n\n### Specifying the insecure registry\n\nYou must specify the `--insecure-registry` option to reference the Docker registry that is created. The `--insecure-registry` value is the same as specified in the  `daemon.json` file.\n\n<InlineNotification>\n\n**Note:** Because of a limitation in the current version of Minikube, adding the `--insecure-registry` option works on a new Minikube instance only.\nIf you start Minikube, be sure to run `minikube stop` and `minikube delete` before you start it again with the `--insecure-registry` option.\n\n</InlineNotification>\n\n### Specifying the Kubernetes version\n\nYou can override the version of Kubernetes that gets installed inside the Minikube VM by using the `--kubernetes-version` flag. This flag controls the compatibility between the client tools and the Kubernetes specification.\n\nIf you override the Kubernetes version, ensure that you download and install the corresponding version of `kubectl` - this version must be the same version as the Kubernetes cluster.\n\n<InlineNotification>\n\n**Note:** The `kubectl` version running locally and on Minikube should be compatible, so it's possible to use the `--kubernetes-version` flag to keep them consistent.\n\n</InlineNotification>\n\n## Docker registry\n\nYou need a registry to use docker images with Helm in Minikube.\nThere are different types of registries that can be used. However, this page describes a simple registry option that doesn't require extra components.\n\nMinikube provides an add-on to run a registry in a container. For more information, see [How to access the Docker registry within minikube](https://minikube.sigs.k8s.io/docs/tasks/docker_registry/).\n\nYou can use the following command to enable the add-on:\n\n```shell\nminikube addons enable registry\n```\n\nWhen enabled, starting Minikube starts two pods on the `kube-system` namespace, named `registry` and `registry-proxy`. Now the registry is active and can be used. The registry points to the Minikube IP address on port 5000.\n\nThe containers don't mount any volumes, so stopping Minikube deletes the registry content.\n\n## Hostname configuration for Minikube\n\nThis runbook uses a generic hostname of `minikube.local` as an example in commands and the configuration files.\nYou should add the Minikube IP address to the `hosts` file by using the generic hostname, or else modify the usage of `minikube.local` in this runbook to reflect your local hostname.\n\n<Tabs>\n\n<Tab label=\"Mac/Linux\">\n<Row>\n<Column>\n\n```shell\necho -e \"$(minikube ip)\\tminikube.local\" | sudo tee -a /etc/hosts\n```\n\n</Column>\n</Row>\n</Tab>\n\n<Tab label=\"Windows\">\n<Row>\n<Column>\n\n```powershell\nAdd-Content -Path C:\\Windows\\System32\\drivers\\etc\\hosts -Value \"$(minikube ip)`tminikube.local\" -Force\n```\n\n</Column>\n</Row>\n</Tab>\n\n</Tabs>\n\nWhere `minikube ip` is the command that returns the Minikube VM's IP address that is accessible from your workstation.\n\nThe local Docker client configuration must be also be updated with the corresponding IP address.\n\n* Update the `daemon.json` docker configuration file with the Minikube IP address. This file is usually located in:\n  * `~/.docker/daemon.json` on OSX\n  * `/etc/docker/daemon.json` on Linux\n  * `C:\\ProgramData\\Docker\\config\\daemon.json` on Windows\n\nExample of `daemon.json`:\n\n```json\n{\n  \"insecure-registries\": [\n    \"192.168.0.0/16\"\n  ]\n}\n```\n\n<InlineNotification>\n\n**Note:** You can provide a specific IP address, or specify a subnet to future-proof the Docker client configuration.\n\n</InlineNotification>\n\nThe Minikube IP address might change when you run `minikube delete`. If it changes, you must repeat these steps.\n\nTherefore, reconfirm the Minikube IP and its setting in the `hosts` file every time you start Minikube, or after you run `minikube delete`.\n\n## Minikube Ingress\n\nIngress is a reverse proxy, which sits in front of the application that is deployed in Kubernetes. It facilitates use of a custom domain name to access a deployed application, instead of using service ports.\nTo enable Ingress for Minikube, you must enable the `ingress` add-on.\n\n```shell\nminikube addons enable ingress\n```\n\n## Useful Minikube commands\n\nSome useful Minikube commands are as follows:\n\n```shell\n# Sample commands\nminikube status       # See if Minikube is running\nminikube start        # Create and start Minikube\nminikube dashboard    # Access the Kubernetes dashboard running within the Minikube cluster\nminikube ssh          # Login into the Minikube VM\nminikube addons list  # Show the status of the available add-ons\nminikube stop         # Stop Minikube\nminikube delete       # Delete the Minikube VM\nminikube ip           # Show the Minikube IP\n```\n\nFor a full list of commands, see [Installing Kubernetes with Minikube](https://kubernetes.io/docs/setup/minikube/).\n","fileAbsolutePath":"/home/travis/build/IBM/spm-kubernetes/src/pages/prereq/kubernetes/minikube.mdx"}}}}