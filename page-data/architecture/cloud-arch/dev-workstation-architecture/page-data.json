{"componentChunkName":"component---src-pages-architecture-cloud-arch-dev-workstation-architecture-mdx","path":"/architecture/cloud-arch/dev-workstation-architecture/","result":{"pageContext":{"frontmatter":{"title":"Dev Workstation","description":"Dev Workstation","tabs":["Dev Workstation Architecture","SPM IKS Reference Architecture","Static Content Deployment Architecture"]},"relativePagePath":"/architecture/cloud-arch/dev-workstation-architecture.mdx","titleType":"page","MdxNode":{"id":"a697161e-e386-5684-bd9f-1f0ffc096bc5","children":[],"parent":"bace4f65-7749-5d9c-85df-b32e6c372d5a","internal":{"content":"---\ntitle: Dev Workstation\ndescription: Dev Workstation\ntabs: ['Dev Workstation Architecture','SPM IKS Reference Architecture','Static Content Deployment Architecture']\n---\n\nThis runbook is designed for first-time users of Helm, Minikube, and Kubernetes.\n\nMinikube is a variant of Kubernetes that runs a single-node cluster inside a virtual machine (VM) on your laptop.\n\nThe procedure that is described uses a minimal architecture, where the intent is to get you familiar with using the main artifacts needed to run SPM on Kubernetes. Figure 1 describes the example architecture:\n\n![Example architecture](../../../images/dev_workstation_architecture.png)\n<Caption>\n\n*Figure 1:* Example dev workstation architecture\n\n</Caption>\n\nThe architecture is defined by a Kubernetes environment (contained in a virtual machine) that is composed of the following elements:\n\n* An IBM® WebSphere® Liberty based pod that contains the Cúram EAR file.\n* A pod with an IBM MQ Server configured as the message engine to support JMS-based deferred processing in SPM.\n* A pod that contains the XML server.\n* A pod that runs batch processes.\n\nThis environment is linked to an external IBM Db2 or Oracle database.\n\nFor the Kubernetes cluster, this runbook uses Minikube. Minikube can easily run on a developer computer, which is convenient for describing the application flow.\n\nFigure 2 describes the following development path.\n\n* Create a build and deployment environment for SPM.\n* Build SPM to deploy it on Kubernetes on Minikube.\n* Create the Docker® images for SPM.\n* Deploy SPM Docker images to Kubernetes on Minikube.\n* Troubleshoot SPM when deployed in Kubernetes.\n\n![Process summary](../../../images/summary_process.png)\n<Caption>\n\n*Figure 2:* Process summary\n\n</Caption>\n\n<InlineNotification>\n\n**Note:** The implementation of SPM that is described in this runbook uses only the following .ear files:\n\n* Curam.ear\n* CuramServerCode.ear\n\nThe scripts can be easily extended to include the other SPM applications, such as Rest or Citizen Portal.\n\n</InlineNotification>\n\nThe runbook makes the following assumptions:\n\n* Steps to build the SPM containers and run Minikube are run on a development machine, preferably a Red Hat or OSX machine.\n* Steps related to [Building the IBM Cúram Social Program Management application](/deploy-spm/spm-build) can be executed on a separate machine.\n* Base knowledge of the Linux command line for navigating folders.\n\n<InlineNotification>\n\n**Note:** This is enablement documentation. This does not affect 3rd party software that SPM currently supports. Refer to [IBM Cúram Social Program Management Support Prerequisites](https://www.ibm.com/software/reports/compatibility/clarity-reports/report/html/softwareReqsForProduct?deliverableId=4250BFF0E44711E9BBE3B807AD202AB8&osPlatforms=Linux&duComponentIds=S000#sw-3)\n for more details.\n\n</InlineNotification>\n","type":"Mdx","contentDigest":"693261a98b7fcb6a37ec38e8c84e11bd","counter":174,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Dev Workstation","description":"Dev Workstation","tabs":["Dev Workstation Architecture","SPM IKS Reference Architecture","Static Content Deployment Architecture"]},"exports":{},"rawBody":"---\ntitle: Dev Workstation\ndescription: Dev Workstation\ntabs: ['Dev Workstation Architecture','SPM IKS Reference Architecture','Static Content Deployment Architecture']\n---\n\nThis runbook is designed for first-time users of Helm, Minikube, and Kubernetes.\n\nMinikube is a variant of Kubernetes that runs a single-node cluster inside a virtual machine (VM) on your laptop.\n\nThe procedure that is described uses a minimal architecture, where the intent is to get you familiar with using the main artifacts needed to run SPM on Kubernetes. Figure 1 describes the example architecture:\n\n![Example architecture](../../../images/dev_workstation_architecture.png)\n<Caption>\n\n*Figure 1:* Example dev workstation architecture\n\n</Caption>\n\nThe architecture is defined by a Kubernetes environment (contained in a virtual machine) that is composed of the following elements:\n\n* An IBM® WebSphere® Liberty based pod that contains the Cúram EAR file.\n* A pod with an IBM MQ Server configured as the message engine to support JMS-based deferred processing in SPM.\n* A pod that contains the XML server.\n* A pod that runs batch processes.\n\nThis environment is linked to an external IBM Db2 or Oracle database.\n\nFor the Kubernetes cluster, this runbook uses Minikube. Minikube can easily run on a developer computer, which is convenient for describing the application flow.\n\nFigure 2 describes the following development path.\n\n* Create a build and deployment environment for SPM.\n* Build SPM to deploy it on Kubernetes on Minikube.\n* Create the Docker® images for SPM.\n* Deploy SPM Docker images to Kubernetes on Minikube.\n* Troubleshoot SPM when deployed in Kubernetes.\n\n![Process summary](../../../images/summary_process.png)\n<Caption>\n\n*Figure 2:* Process summary\n\n</Caption>\n\n<InlineNotification>\n\n**Note:** The implementation of SPM that is described in this runbook uses only the following .ear files:\n\n* Curam.ear\n* CuramServerCode.ear\n\nThe scripts can be easily extended to include the other SPM applications, such as Rest or Citizen Portal.\n\n</InlineNotification>\n\nThe runbook makes the following assumptions:\n\n* Steps to build the SPM containers and run Minikube are run on a development machine, preferably a Red Hat or OSX machine.\n* Steps related to [Building the IBM Cúram Social Program Management application](/deploy-spm/spm-build) can be executed on a separate machine.\n* Base knowledge of the Linux command line for navigating folders.\n\n<InlineNotification>\n\n**Note:** This is enablement documentation. This does not affect 3rd party software that SPM currently supports. Refer to [IBM Cúram Social Program Management Support Prerequisites](https://www.ibm.com/software/reports/compatibility/clarity-reports/report/html/softwareReqsForProduct?deliverableId=4250BFF0E44711E9BBE3B807AD202AB8&osPlatforms=Linux&duComponentIds=S000#sw-3)\n for more details.\n\n</InlineNotification>\n","fileAbsolutePath":"/home/travis/build/IBM/spm-kubernetes/src/pages/architecture/cloud-arch/dev-workstation-architecture.mdx"}}}}