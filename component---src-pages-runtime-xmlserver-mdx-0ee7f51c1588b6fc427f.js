(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{Yb2a:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n("wx14"),a=n("zLVn"),c=(n("q1tI"),n("7ljp")),o=n("013z"),s=(n("qKvR"),{}),i={_frontmatter:s},b=o.a;function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)(b,Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"As shown in ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/spm-kubernetes/architecture/cloud-arch/dev-workstation-architecture"}),"Deployment architecture")," a single pod is created for our XML server."),Object(c.b)("p",null,"To verify the service name, run the following command:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"kubectl get services\n")),Object(c.b)("p",null,"The XML server is listed with the name: ",Object(c.b)("inlineCode",{parentName:"p"},"releasename-xmlserver")," where ",Object(c.b)("inlineCode",{parentName:"p"},"releasename")," was defined during deployment."))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-runtime-xmlserver-mdx-0ee7f51c1588b6fc427f.js.map